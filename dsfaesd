local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local PlayerGui = Players.LocalPlayer:WaitForChild("PlayerGui")

local webhookUrl = "https://discord.com/api/webhooks/1198509921994555408/FP5zzIMd5mc_Dxhzm7SmvcJtCncboXoOLAeHgpslFMWVUk2ad0KN3OMlzJsrS3IcR02Q"
local foundFruits = {}

local function sendWebhook(data)
    local requestFunction = syn and syn.request or http_request or request
    if requestFunction then
        requestFunction({
            Url = webhookUrl,
            Method = "POST",
            Headers = { ["Content-Type"] = "application/json" },
            Body = HttpService:JSONEncode(data)
        })
    else
        warn("No HTTP request function available!")
    end
end

local root = PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.Frame
local scrollingFrame = root.Parent
local maxScroll = scrollingFrame.AbsoluteCanvasSize.Y - scrollingFrame.AbsoluteSize.Y

for scroll = 0, maxScroll, 100 do
    scrollingFrame.CanvasPosition = Vector2.new(0, scroll)
    task.wait(0.25)

    for i = 1, 9 do
        local frame = root:FindFirstChild(tostring(i))
        if frame then
            local itemNameLabel = frame:FindFirstChild("Filled")
                and frame.Filled:FindFirstChild("ItemInformation")
                and frame.Filled.ItemInformation:FindFirstChild("ItemName")
            
            if itemNameLabel and itemNameLabel:IsA("TextLabel") then
                local text = itemNameLabel.Text
                if text and text:match("^[%w%s%-_]+%s[Ff]ruit$") and text ~= "Blox Fruit" then
                    if not table.find(foundFruits, text) then
                        table.insert(foundFruits, text)
                    end
                end
            end
        end
    end
end

if #foundFruits > 0 then
    local message = "**Found Fruits (excluding Blox Fruit):**\n" .. table.concat(foundFruits, "\n")
    sendWebhook({ content = message })
else
    sendWebhook({ content = "**Scan failed or no fruits found.**" })
end
